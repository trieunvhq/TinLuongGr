<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrint.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACMAAAAgCAYAAACYTcH3AAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALEwAACxMBAJqcGAAACQZJREFUWEfNl3lQlFcS
        wNuYNavJGnRl3TUbFU25blkY/wkYwxoVF41rCa5HUBNTJSrKYimHcnhxBA+Qa7iR+0Y5B5hhBmaYS2AY
        QECEMVFUIJwKKARQkd5+H0yKVctd3D9MV3W973vfN1//Xr9+3T2AiL8afeXk21K4c+cOVFSoISeTDwV5
        IsjM5QM/Xwj5QjEIikqgUKIAsawUJCo1FMrVcEP7I/T1PIS2tnZob39ZOzs7obu7GxQKxYcZGRmzY2Ji
        QCQSgUqlgtTUVHBycoL09HRITEyEDRs2gKOjI7B3XFxcJgkjU0O99jb09/VwhtteANEpwUzTarV2ZWVl
        rjKZbBuNxqTz+Xz+9EuXLnEwUVFRsHr1arC1tYXIyMjJw0hUGlBp6kB7+y50d3VxXujo6PgPbWtrg56e
        nu+ePXuGOh0YGBimufaurq7rLS0t/Nra2mCpVOoYGhq6PSws1DgkJGSBq6vrB5OCkZVWgrS0CorLauBe
        cys86O7iPKEDGb+e2t/fX/7kyRMcGRnB0dFRCoeXRTc/PDw8VFpa1unk5Bw6KZiSa5UgL6+BEnUdaOq0
        0NXZDj+1tkLruNKq4cGDBxsHBweZEWRAzDMM6vnz57/oi1JSokBr64MObwSjrKwHaXktNP54F54MDcLQ
        8DAMDQ2x7YFHjx6l0jUH8vTpU04ZkA5EB6aTgYFB9PX1/8HcfMP7bwwjI+9cq26k3zeBtrERbt26BY8f
        PzYg4/3MMzqYibGjg2Gqk6qqOrS1tT67ebPJ5AJ4IoyK9Nr1W8AXSiAxIQGSkhLZcb748OFDzjAD0Rlm
        yubYqANiwsImJSVtcN26VctWrFjy5jAckIb0+m0okckplxT+OSkpqffmzZucoYme0IHoRl3wdnX1oLv7
        ab6+/gcwZQr8fzDKcZhytQaUSoVDbm4u3r17lzOm8wwDmKg6r9DJw4SEZNyzx2LvF198AuvWGb4hjObG
        KmXlzePKqgZLeUX94tIy9UeVGk21WCxGSnicMWZUB8PAdMqE8g6mpV1BKyur1jVr/qJvZDQXTEwWTBJG
        VbVGVladrFDXDpOiUl2NcsW1bqlE0lRSUoIMRqvVIiVD7OvrQ3aqJp4cJuy+vr4eg4NDcdcui8srPtUj
        kIXw5ZeL/zuMSKIEcUnphmJ5eY5UpUGpUoNiqQqFoiIsFApRICjAnJwczMrKwuzsbMzMzES2XUJ6RlkW
        1Wo1sjhqbm7G3t5ebG1pQUmxBN3Onn76zTfmxhcuecHl6Dhwd3N7HUwRCMRSM2GxLL9Idg2L5WWYX1iM
        6VczkAKVNJHTxMQEjIuLQyp23HxsbCxGR0cj1R6kmoMRERHcyOZiY2Noe9IIOBt5Qbx+fmGxTVP7z0ui
        YxKmen3vNQajVpdDblY+iARSyMrLg9x84ad5AlGqUCwlLygwt6AQY+LiMTAwEP39/biRx+NxY0BAAPr5
        +aG3tzd3zeb9/f25a536+Hijl5cXBtD76Vm5yBanLK9CWWkVRkbFdri7uy89e/bsGIxGUwFX0jIgJ4v/
        fr5A4FkgFD9i28DPF2B45GV0c3NDFxdnPHXqFHetU/oAnjlzBk+ePInOzs5I7QF3P/bMjbt2cjrB/S48
        MgrzyLOysipUaWowM7cAz52/gCdOHH9GRXIFvQPQ1NQENTU1rNf42+lzztePOR5FXmAQRpBrHRwccN++
        fXjgwH60sfkXZcojeOTImFLp59TGxgYPHTqEBw8eZKeDuz92zI7Gw2i13wpdCTQpJZ28oUJ5aSVKFGUY
        HRuHJ11d0cHenmBO9NFCDDkY5pnGRu12CrShbH4GQYRjeFg4HiFDX321Ec3MzHDTpk24detW3LlzJ52A
        Xbh7925OLS0tubkdO3bgtm3b0MLCghvZ/ddf70Q3D0/MzhOghLZFqixHgUiC/gGB6Ohgj3Z2dkiNFfPi
        wMWLFw1pBJBIJPrV1dWPGhoasK62joIxFoOCgihNp3DBRr0GbZELJac9aGpqiitXrkRjY2M0MTHBtWvX
        cnNM2TWbMzQ05BYQGBSMRVI5FkpkNCoxOycPz587RxDH0M7eDp2cndDXzxcjI8JHtmzZskpPTw+AjuKs
        4uLigqqqSpTL5bh48RJqRmF0wYIFo+bm5ty+xxIgO7oM0MfHBw8fPowbN27E5cuX48KFC3H+/PloYGCA
        8+bNIyhTCloepqWn08nLpAMg50Y3ii8GwrxBAUveD0VPD49eo88+8yR7fyIFKCoqgkAe710jI6NNpqbr
        T/99/eYf9u+3xvWm6/F3M6YxMIQpgIsWGXBb4OnpgXHx8Xj1ylWMp9HT05PbLoLHzz9fhSlpqZhHucfX
        1w8TEpMxnd5jC7Kn+GDxw7weHhaGe7/dWzJr1qz1HIROaJuYd+CStw+Eh4Ya3b/ffIdlyp/a2iip0Ud9
        zuPuXZa4bNkynPbeexzcjOm/xaVLlqC5uQV3UlhOYV4T5AkxIjUIL0a5U+IrwKvjHqEuDn28fTCe8tH5
        c159tHAP+s4cDmCiXK+uhvobN6C3p+ePxCBgIExYTRkY+Bl7KGuy4kfHH6nbRw8PD9z+z634CXnqnXem
        cHB6ejMpvlKxs6MTs/iZmJaRym0rixH2fnR0FHkxDvdb7ZPNnj3bbMzyKyQ5ORkSqB+hYH03Py/v4yKx
        eNP9e/eCqJiN9QIkrIVkfQqrOdRacvWHmmosLy+jOHBA/TkfU5aNRmqwsLKS8oiyFENDQzCIF0iQKXjh
        vFfHSmOj02TuZW9MFAZC6RxoJZAQHw9hISEQGBAAsTExH1ZUVPyjuaUlhLykZVAj5C1quJFaSw6SpPbY
        UfutM2b8fp+1tW1uZmZGs1KlGmVFMy01BS9Hho/s2WWZOXPmzJXj5l4vVE84IAaTRn+yUshT/n5+EBIc
        DFRX4OjRo5CakjJLIZebd3Z0xDwZHm5jFFSV5U7Hj8//zdSp41+CqXPn/uGvdMQtD1lb877b+23aIgOD
        AzQ/fezx/yAvwiTTfRCPB5fpjxV7RtkVvC9cgO89PODqlStQJBItbWxosKGC+JH+nHGvT/kFaKK8cvK1
        Qov81egrJ9+WvnLy7SjCvwGZQuc1Xgf8RwAAAABJRU5ErkJggg==
</value>
  </data>
</root>